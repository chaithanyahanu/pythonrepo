trigger:
- main

variables:
- group: pythongroup
- name: imageTag
  value: $(Build.BuildId)

pool:
  vmImage: ubuntu-latest

stages:
# -------------------------------
# Stage 1: Build Docker Image
# -------------------------------
- stage: Build
  displayName: Build Docker Image
  jobs:
  - job: BuildImage
    steps:
    - checkout: self
    - script: |
        IMAGE=$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag)
        echo "üì¶ Building Docker image: $IMAGE"
        docker build -t $IMAGE .
      displayName: Build Docker Image

# -------------------------------
# Stage 2: Push Docker Image
# -------------------------------
- stage: Push
  displayName: Push Docker Image to ACR
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: PushImage
    environment: acr-approval   # manual approval environment
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: acr-pythoncode
          - script: |
              IMAGE=$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag)
              echo "üì§ Pushing Docker image: $IMAGE"
              docker push $IMAGE
            displayName: Push Docker Image

# -------------------------------
- stage: Notify
  displayName: Notify Microsoft Teams
  dependsOn:
  - Build
  - Push
  condition: always()
  variables:
    buildResult: $[ dependencies.Build.result ]
    pushResult:  $[ dependencies.Push.result ]
  jobs:
  - job: TeamsNotify
    steps:
    - checkout: none
    - bash: |
        if [ "$(buildResult)" != "Succeeded" ] || [ "$(pushResult)" != "Succeeded" ]; then
          STATUS="‚ùå Failed"
        else
          STATUS="‚úÖ Success"
        fi

        IMAGE="$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag)"

        # Use <br> to force line breaks in Teams
        payload="{
          \"type\": \"MessageCard\",
          \"@type\": \"MessageCard\",
          \"@context\": \"http://schema.org/extensions\",
          \"summary\": \"Azure DevOps Pipeline Result\",
          \"text\": \"<b>Azure DevOps Pipeline</b><br><br>Pipeline: $(Build.DefinitionName)<br>Branch: $(Build.SourceBranchName)<br>Run ID: $(Build.BuildId)<br>Image: ${IMAGE}<br>Status: ${STATUS}\"
        }"

        echo "Sending Teams notification with status: $STATUS"
        curl -H "Content-Type: application/json" \
             -d "$payload" \
             $(TEAMS_WEBHOOK_URL)
      displayName: Send Teams Notification





