trigger:
- main

variables:
- group: pythongroup
- name: imageTag
  value: $(Build.BuildId)

pool:
  vmImage: ubuntu-latest  # ‚úÖ Use your self-hosted agent pool name

stages:
# -------------------------------
# Stage 1: Build Docker Image
# -------------------------------
- stage: Build
  displayName: Build Docker Image
  jobs:
  - job: BuildImage
    steps:
    - checkout: self
    - script: |
        IMAGE=$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag)
        echo "üì¶ Building Docker image: $IMAGE"
        docker build -t $IMAGE .
      displayName: Build Docker Image

# -------------------------------
# Stage 2: Push Docker Image (Approval)
# -------------------------------
- stage: Push
  displayName: Push Docker Image to ACR
  dependsOn: Build
  condition: succeeded()        # only push if build succeeds
  jobs:
  - deployment: PushImage
    environment: acr-approval   # üëà environment with manual approval
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: acr-pythoncode
          - script: |
              IMAGE=$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag)
              echo "üì§ Pushing Docker image: $IMAGE"
              docker push $IMAGE
            displayName: Push Docker Image

# -------------------------------
# Stage 3: Teams Notification (ALWAYS RUNS)
# -------------------------------
- stage: Notify
  displayName: Notify Teams
  dependsOn: [Build, Push]      # depends on all previous stages
  condition: always()           # ‚úÖ Runs even if pipeline fails
  jobs:
  - job: TeamsNotify
    steps:
    - checkout: none
    - bash: |
        # Determine final pipeline result from Azure DevOps variable
        if [ "$(System.Failed)" == "True" ]; then
          STATUS="‚ùå Failed"
        else
          STATUS="‚úÖ Success"
        fi

        IMAGE="${ACR_LOGIN_SERVER}/${IMAGE_NAME}:${imageTag}"

        # Build Teams message payload
        payload="{
          \"text\": \"Azure DevOps Pipeline\\n‚Ä¢ Pipeline: $(Build.DefinitionName)\\n‚Ä¢ Branch: $(Build.SourceBranchName)\\n‚Ä¢ Run ID: $(Build.BuildId)\\n‚Ä¢ Image: ${IMAGE}\\n‚Ä¢ Status: ${STATUS}\"
        }"

        echo "Sending Teams notification with status: $STATUS"
        curl -H "Content-Type: application/json" \
             -d "$payload" \
             $(TEAMS_WEBHOOK_URL)
      displayName: Send Teams Notification
