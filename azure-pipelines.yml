trigger:
- main

# Load secret variables from the variable group
variables:
- group: pythongroup

# Build-time variables
- name: imageTag
  value: $(Build.BuildId)

pool:
  vmImage: ubuntu-latest

stages:

# -----------------------
# Stage 1: Build & Push
# -----------------------
- stage: BuildAndPush
  jobs:
  - job: DockerBuildPush
    displayName: 'Build and Push Docker Image to ACR'
    steps:
    - checkout: self

    - task: Docker@2
      displayName: 'Login to ACR (Service Connection)'
      inputs:
        command: login
        containerRegistry: acr-pythoncode   # Docker Registry service connection name

    - script: |
        echo "Building Docker image..."
        docker build -t $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag) .
      displayName: 'Build Docker Image'

    - script: |
        echo "Pushing Docker image..."
        docker push $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag)
      displayName: 'Push Docker Image to ACR'

# -----------------------
# Stage 2: Deploy to VM
# -----------------------
- stage: DeployToVM
  dependsOn: BuildAndPush
  jobs:
  - job: DeployViaSSH
    displayName: 'Deploy Docker Image to Azure Linux VM'
    steps:
    - task: SSH@0
      displayName: 'SSH and Deploy to VM'
      inputs:
        sshEndpoint: 'linux-vm-ssh'   # Your SSH service connection name
        runOptions: inline
        inline: |
          echo "Logging into ACR..."
          echo $(ACR_PASSWORD) | docker login $(ACR_LOGIN_SERVER) -u $(ACR_USERNAME) --password-stdin

          IMAGE_NAME=$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(Build.BuildId)
          echo "Pulling image: $IMAGE_NAME"
          docker pull $IMAGE_NAME

          echo "Stopping and removing existing container (if any)..."
          docker stop app || true
          docker rm app || true

          echo "Running new container..."
          docker run -d --name app -p 80:80
