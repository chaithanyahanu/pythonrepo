trigger:
- main

# Load secret values from variable group
variables:
- group: pythongroup
- name: imageTag
  value: $(Build.BuildId)

pool:
  vmImage: ubuntu-latest

stages:

# -------------------------------
# Stage 1: Build & Push to ACR
# -------------------------------
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
  - job: DockerBuildPush
    steps:
    - checkout: self

    - task: Docker@2
      displayName: 'Login to ACR using Service Connection'
      inputs:
        command: login
        containerRegistry: acr-pythoncode  # Docker Registry service connection

    - script: |
        echo "Building Docker image..."
        docker build -t $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag) .
      displayName: 'Build Docker Image'

    - script: |
        echo "Pushing Docker image..."
        docker push $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag)
      displayName: 'Push Docker Image to ACR'

# ----------------------------------
# Stage 2: SSH Deploy to Linux VM
# ----------------------------------
- stage: DeployToVM
  displayName: Deploy Image on Azure Linux VM
  dependsOn: BuildAndPush
  jobs:
  - job: DeployViaSSH
    steps:
    - task: SSH@0
      displayName: 'SSH and Deploy to VM'
      inputs:
        sshEndpoint: 'linux-vm-ssh'  # SSH service connection
        runOptions: inline
        inline: |
          echo "Logging into ACR..."
          echo $(ACR_PASSWORD) | docker login $(ACR_LOGIN_SERVER) -u $(ACR_USERNAME) --password-stdin

          IMAGE_NAME="$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(Build.BuildId)"
          echo "Pulling image: $IMAGE_NAME"
          docker pull $IMAGE_NAME || { echo "Image pull failed"; exit 1; }

          echo "Stopping and removing existing container..."
          docker stop app || true
          docker rm app || true

          echo "Running new container..."
          docker run -d --name app -p 80:5000 $IMAGE_NAME || { echo "Container failed to start"; exit 1; }

          echo "âœ… Container deployed successfully"
          docker ps
