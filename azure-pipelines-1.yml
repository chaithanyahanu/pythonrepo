trigger:
- main

variables:
- group: pythongroup
- name: imageTag
  value: $(Build.BuildId)

pool:
  vmImage: ubuntu-latest

stages:

# -------------------------------
# Stage 1: Build & Push to ACR
# -------------------------------
- stage: BuildAndPush
  displayName: Build and Push Docker Image to ACR
  jobs:
  - job: DockerBuildPush
    steps:
    - checkout: self

    - task: Docker@2
      displayName: Login to ACR using Service Connection
      inputs:
        command: login
        containerRegistry: acr-pythoncode  # Docker Registry service connection

    - script: |
        docker build -t $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag) .
        docker push $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(imageTag)
      displayName: Build and Push Docker Image

# ----------------------------------
# Stage 2: Deploy to Container App
# ----------------------------------
- stage: DeployToContainerApp
  dependsOn: BuildAndPush
  displayName: Deploy to Azure Container App
  jobs:
  - job: Deploy
    steps:
    - task: AzureCLI@2
      displayName: Deploy New Image to Existing Container App
      inputs:
        azureSubscription: azure-conn  # Azure Resource Manager service connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az extension add --name containerapp --yes

          IMAGE=$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(Build.BuildId)

          echo "Deploying image $IMAGE to Container App $(CONTAINER_APP_NAME)..."

          az containerapp update \
            --name $(CONTAINER_APP_NAME) \
            --resource-group $(RESOURCE_GROUP) \
            --image $IMAGE

          echo "âœ… Container App updated successfully."
